import pytsk3
import yara
import volatility3.framework.interfaces.context as interfaces
from volatility3.framework import contexts, plugins
from volatility3.framework.layers import physical

def analyze_memory_dump(memory_dump_path, yara_rules_path):
    ctx = contexts.ContextInterface()
    physical_layer = physical.FileLayer(
        ctx, 'memory_dump', memory_dump_path, preferred_name="physical_memory"
    )
    ctx.add_layer(physical_layer)

    #pattern in yara
    rules = yara.compile(filepath=yara_rules_path)

    #memory dump
    matches = rules.match(data=physical_layer.read())
    return matches

def analyze_disk_image(disk_image_path, yara_rules_path):
    img_info = pytsk3.Img_Info(disk_image_path)
    fs_info = pytsk3.FS_Info(img_info)
    yara_rules = yara.compile(filepath=yara_rules_path)

    def scan_directory(directory):
        for entry in directory:
            if entry.info.name.name in [b'.', b'..']:
                continue
            if entry.info.meta.type == pytsk3.TSK_FS_META_TYPE_DIR:
                sub_directory = entry.as_directory()
                scan_directory(sub_directory)
            else:
                file_path = entry.info.name.name.decode('utf-8')
                file_object = entry.open()
                file_data = file_object.read_random(0, entry.info.meta.size)
                matches = yara_rules.match(data=file_data)
                for match in matches:
                    print(f"Found match: {match.rule} in file {file_path} at {match.strings}")

    root_directory = fs_info.open_dir('/')
    scan_directory(root_directory)

def main(memory_dump_path, disk_image_path, yara_rules_path):
    print("Analyzing memory dump...")
    memory_matches = analyze_memory_dump(memory_dump_path, yara_rules_path)
    for match in memory_matches:
        print(f"Found match in memory dump: {match.rule} at {match.strings}")

    print("\nAnalyzing disk image...")
    analyze_disk_image(disk_image_path, yara_rules_path)

if __name__ == "__main__":
    #defining paths

    memory_dump_path = ""
    disk_image_path = ""
    yara_rules_path = "yara_rules.yar"

    main(memory_dump_path, disk_image_path, yara_rules_path)
